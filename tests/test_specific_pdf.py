"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ PDF —Ñ–∞–π–ª–∞
"""

import os
import sys
from services.ai_pdf_converter import AIPDFConverter
from utils.text_extractor import TextExtractor

def test_specific_pdf():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ PDF —Ñ–∞–π–ª–∞"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ PDF —Ñ–∞–π–ª–∞")
    print("=" * 60)
    
    # –ü—É—Ç—å –∫ —Ç–µ—Å—Ç–æ–≤–æ–º—É —Ñ–∞–π–ª—É
    pdf_path = "/Users/apple/Desktop/Kira/RAG/–î–æ–∫–ª–∞–¥_78a1afbd.pdf"
    
    if not os.path.exists(pdf_path):
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {pdf_path}")
        return
    
    print(f"üìÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º—ã–π —Ñ–∞–π–ª: {pdf_path}")
    print(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {os.path.getsize(pdf_path)} –±–∞–π—Ç")
    print()
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
    print("1Ô∏è‚É£ –¢–µ—Å—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ (PyMuPDF):")
    try:
        text_data = TextExtractor.extract_text_with_metadata(pdf_path)
        text = text_data['text']
        metadata = text_data['metadata']
        
        print(f"   ‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
        print(f"   üìÑ –î–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞: {len(text)} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"   üìñ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤: {metadata.get('total_words', 0)}")
        print(f"   üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü: {metadata.get('total_pages', 0)}")
        print(f"   üîç –ü–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤:")
        print(f"   {'-' * 50}")
        print(f"   {text[:200]}...")
        print(f"   {'-' * 50}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Å–ª–æ–π
        if len(text.strip()) < 50:
            print(f"   ‚ö†Ô∏è –¢–µ–∫—Å—Ç–∞ –º–∞–ª–æ - –≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π PDF")
            needs_ai = True
        else:
            print(f"   ‚úÖ –¢–µ–∫—Å—Ç–æ–≤—ã–π —Å–ª–æ–π –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            needs_ai = False
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: {e}")
        needs_ai = True
    
    print()
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ PDF
    print("2Ô∏è‚É£ –¢–µ—Å—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ PDF:")
    try:
        converter = AIPDFConverter()
        is_scanned = converter.is_pdf_scanned(pdf_path)
        print(f"   üîç –û—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π PDF: {is_scanned}")
        
        if is_scanned:
            print(f"   üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ò–ò-–∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è")
        else:
            print(f"   üí° –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–∞")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")
    
    print()
    
    # –¢–µ—Å—Ç 3: –ò–ò-–∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    if needs_ai or is_scanned:
        print("3Ô∏è‚É£ –¢–µ—Å—Ç –ò–ò-–∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏:")
        try:
            ai_result = converter.extract_text_with_ai_fallback(pdf_path)
            ai_text = ai_result['text']
            ai_metadata = ai_result['metadata']
            
            print(f"   ‚úÖ –ò–ò-–∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
            print(f"   üìÑ –î–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞: {len(ai_text)} —Å–∏–º–≤–æ–ª–æ–≤")
            print(f"   üìñ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤: {ai_metadata.get('total_words', 0)}")
            print(f"   üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü: {ai_metadata.get('total_pages', 0)}")
            print(f"   ü§ñ –°—Ç—Ä–∞–Ω–∏—Ü –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –ò–ò: {ai_metadata.get('ai_converted_pages', 0)}")
            print(f"   üìù –ú–µ—Ç–æ–¥ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: {ai_metadata.get('conversion_method', 'unknown')}")
            print(f"   üîç –ü–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤:")
            print(f"   {'-' * 50}")
            print(f"   {ai_text[:200]}...")
            print(f"   {'-' * 50}")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            output_path = "test_output.txt"
            with open(output_path, "w", encoding="utf-8") as f:
                f.write(ai_text)
            print(f"   üíæ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: {output_path}")
            
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ò–ò-–∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: {e}")
    else:
        print("3Ô∏è‚É£ –ò–ò-–∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
    
    print()
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    test_specific_pdf()

if __name__ == "__main__":
    main() 