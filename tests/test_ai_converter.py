"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ò–ò-–∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ PDF
"""

import os
import sys
from services.ai_pdf_converter import AIPDFConverter

def test_ai_converter():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç AIPDFConverter"""
    print("ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ò–ò-–∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ PDF")
    print("=" * 50)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä
    converter = AIPDFConverter()
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ PDF
    print("1Ô∏è‚É£ –¢–µ—Å—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ PDF:")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π PDF —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
    test_pdf_path = "test_scanned.pdf"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–µ—Å—Ç–æ–≤—ã–π PDF
    if os.path.exists(test_pdf_path):
        try:
            is_scanned = converter.is_pdf_scanned(test_pdf_path)
            print(f"   üìÑ –§–∞–π–ª: {test_pdf_path}")
            print(f"   üîç –û—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π: {is_scanned}")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")
    else:
        print(f"   ‚ö†Ô∏è –¢–µ—Å—Ç–æ–≤—ã–π PDF –Ω–µ –Ω–∞–π–¥–µ–Ω: {test_pdf_path}")
        print(f"   üí° –°–æ–∑–¥–∞–π—Ç–µ PDF —Ñ–∞–π–ª –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    
    print()
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    print("2Ô∏è‚É£ –¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:")
    print(f"   üîë API –∫–ª—é—á: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if converter.api_key else '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
    print(f"   ü§ñ –ú–æ–¥–µ–ª—å: {converter.model}")
    print(f"   üìÅ Poppler –ø—É—Ç—å: {converter.poppler_path or '–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é'}")
    
    print()
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    print("3Ô∏è‚É£ –¢–µ—Å—Ç –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:")
    try:
        from PIL import Image
        import io
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        test_image = Image.new('RGB', (100, 100), color='white')
        
        # –ö–æ–¥–∏—Ä—É–µ–º –≤ base64
        b64_data = converter.encode_image_to_base64(test_image)
        
        print(f"   ‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ")
        print(f"   üìä –†–∞–∑–º–µ—Ä base64: {len(b64_data)} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"   üîç –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å: {b64_data[:20]}...")
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
    
    print()
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    print("4Ô∏è‚É£ –¢–µ—Å—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:")
    
    dependencies = [
        ("PyPDF2", "PyPDF2"),
        ("pdf2image", "pdf2image"),
        ("PIL", "PIL"),
        ("requests", "requests")
    ]
    
    for name, module in dependencies:
        try:
            __import__(module)
            print(f"   ‚úÖ {name}: –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        except ImportError:
            print(f"   ‚ùå {name}: –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    print()
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ò–ò-–∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print()
    print("üí° –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("   1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install PyPDF2 pdf2image Pillow requests")
    print("   2. –°–æ–∑–¥–∞–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–π PDF —Ñ–∞–π–ª")
    print("   3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ OPENROUTER_API_KEY —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    test_ai_converter()

if __name__ == "__main__":
    main() 