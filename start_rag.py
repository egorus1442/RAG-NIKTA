import subprocess
import sys
import os

def run_command(command, description, check_output=False):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É"""
    print(f"üîß {description}...")
    try:
        if check_output:
            result = subprocess.run(command, shell=True, capture_output=True, text=True)
            return result.returncode == 0, result.stdout.strip()
        else:
            result = subprocess.run(command, shell=True)
            return result.returncode == 0, ""
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False, ""

def check_and_fix_dependencies():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º NumPy
    success, output = run_command("python3 -c 'import numpy; print(numpy.__version__)'", "–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ NumPy", True)
    if success and output.startswith('2.'):
        print(f"‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –Ω–µ—Å–æ–≤–º–µ—Å—Ç–∏–º–∞—è –≤–µ—Ä—Å–∏—è NumPy: {output}")
        print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ NumPy...")
        run_command("python3 -m pip install 'numpy<2.0'", "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ–π –≤–µ—Ä—Å–∏–∏ NumPy")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º six
    success, _ = run_command("python3 -c 'import six'", "–ü—Ä–æ–≤–µ—Ä–∫–∞ six", True)
    if not success:
        print("üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ six...")
        run_command("python3 -m pip install 'six>=1.17.0'", "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ six")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º dateutil
    success, _ = run_command("python3 -c 'import dateutil'", "–ü—Ä–æ–≤–µ—Ä–∫–∞ dateutil", True)
    if not success:
        print("üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ python-dateutil...")
        run_command("python3 -m pip install --force-reinstall 'python-dateutil>=2.9.0'", "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ python-dateutil")

def check_port():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–Ω—è—Ç –ª–∏ –ø–æ—Ä—Ç 8000"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞ 8000...")
    success, output = run_command("lsof -i :8000", "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞", True)
    if success and output.strip():
        print("‚ö†Ô∏è  –ü–æ—Ä—Ç 8000 –∑–∞–Ω—è—Ç!")
        print("   –ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã:")
        for line in output.strip().split('\n')[1:]:
            if line.strip():
                print(f"   {line.strip()}")
        return False
    print("‚úÖ –ü–æ—Ä—Ç 8000 —Å–≤–æ–±–æ–¥–µ–Ω")
    return True

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ RAG API")
    print("=" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω—É—é —Å—Ä–µ–¥—É
    if not os.environ.get('VIRTUAL_ENV'):
        print("‚ùå –í–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è —Å—Ä–µ–¥–∞ –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!")
        print("   –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—É—é —Å—Ä–µ–¥—É: source venv/bin/activate")
        return False
    
    print(f"‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è —Å—Ä–µ–¥–∞: {os.environ.get('VIRTUAL_ENV')}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    check_and_fix_dependencies()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç
    if not check_port():
        print("\n‚ùå –ü–æ—Ä—Ç 8000 –∑–∞–Ω—è—Ç. –û—Å–≤–æ–±–æ–¥–∏—Ç–µ –ø–æ—Ä—Ç –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        print("   –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –ø–æ—Ä—Ç–∞:")
        print("   - lsof -i :8000  # –Ω–∞–π—Ç–∏ –ø—Ä–æ—Ü–µ—Å—Å")
        print("   - kill -9 <PID>  # –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º .env —Ñ–∞–π–ª
    if not os.path.exists('.env'):
        print("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("   –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –Ω–∞ –æ—Å–Ω–æ–≤–µ example.env")
        return False
    
    print("‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã!")
    print("\nüöÄ –ó–∞–ø—É—Å–∫ RAG API...")
    print("-" * 40)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º RAG API
    return run_command("python3 run.py", "–ó–∞–ø—É—Å–∫ RAG API")

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1) 